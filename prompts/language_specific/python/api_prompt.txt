You are an expert Python API developer. Build: **{{ task_description }}**

## API REQUIREMENTS
{{ code_requirements }}

## DELIVERABLES
Provide a complete, production-ready API with:

### 1. Core Implementation
- **Main API file** with all endpoints
- **Data models** with validation
- **Authentication/Authorization** implementation
- **Database integration** with proper ORM usage
- **Configuration management** (environment variables)

### 2. Quality Assurance
- **Input validation** with clear error messages
- **Comprehensive error handling** with appropriate HTTP status codes
- **Security measures** (rate limiting, CORS, sanitization)
- **Logging configuration** for debugging and monitoring

### 3. Documentation & Testing
- **API documentation** (OpenAPI/Swagger)
- **Setup instructions** with requirements.txt
- **Test examples** with sample requests/responses
- **Environment configuration** examples

## TECHNICAL SPECIFICATIONS
{% if tools %}
**Primary Tools**: {% for tool in tools[:2] %}{{ tool.name }}{% if not loop.last %}, {% endif %}{% endfor %}
{% endif %}

**Code Standards**:
- Use type hints and docstrings
- Follow FastAPI/Django best practices
- Implement proper async/await patterns
- Include comprehensive exception handling

## OUTPUT STRUCTURE
```
## API Architecture
[Brief overview of endpoints and data flow]

## Implementation Files
[Each file with filename and purpose]

## Configuration & Setup
[Environment variables and installation steps]

## Usage Examples
[Sample API calls with curl/requests]

## Testing Guide
[How to validate the implementation]
```

**Create secure, scalable, well-documented API code that follows Python best practices.**