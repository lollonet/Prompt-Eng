[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "prompt-eng"
description = "Modern prompt engineering system with enterprise-grade patterns"
authors = [{name = "Prompt Engineering Team"}]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "Jinja2>=3.1.4",
    "aiofiles>=24.1.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.2",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.14.0",
    "black>=24.4.2",
    "pylint>=3.2.2",
    "mypy>=1.10.0",
    "radon>=6.0.1",
    "xenon>=0.9.1",
    "interrogate>=1.7.0",
    "hypothesis>=6.100.0",
]

# ==================== QUALITY GATES CONFIGURATION ====================

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "--asyncio-mode=auto",
    "-ra",
    "--tb=short",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "property: marks tests as property-based tests",
]

[tool.coverage.run]
branch = true
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "setup.py",
]

[tool.coverage.report]
fail_under = 80
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

# ==================== BLACK CODE FORMATTING ====================

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# ==================== MYPY TYPE CHECKING ====================

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
disallow_any_generics = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
show_error_codes = true
show_column_numbers = true
show_error_context = true

[[tool.mypy.overrides]]
module = [
    "jinja2.*",
    "aiofiles.*",
    "pytest.*",
]
ignore_missing_imports = true

# ==================== PYLINT CONFIGURATION ====================

[tool.pylint.main]
py-version = "3.9"
extension-pkg-whitelist = ["pydantic"]

[tool.pylint.messages_control]
disable = [
    "C0103",  # invalid-name
    "C0114",  # missing-module-docstring (handled by interrogate)
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments (we use dataclasses)
    "W0613",  # unused-argument (common in protocols)
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.design]
max-args = 3  # Enforce max 3 parameters per function
max-attributes = 7
max-bool-expr = 5
max-branches = 12
max-locals = 15
max-parents = 7
max-public-methods = 20
max-returns = 6
max-statements = 50
min-public-methods = 1

# ==================== DOCUMENTATION COVERAGE ====================

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = true
ignore-semiprivate = true
ignore-private = true
ignore-property-decorators = true
ignore-module = true
ignore-nested-functions = true
fail-under = 90
exclude = ["setup.py", "docs", "build", "tests", "venv"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
verbose = 2
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false

# ==================== COMPLEXITY ANALYSIS ====================

[tool.radon]
exclude = "*/tests/*,*/venv/*,*/build/*"
show_complexity = true
average = true
show_mi = true
total_average = true

# ==================== IMPORT SORTING ====================

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["src"]
known_third_party = ["jinja2", "aiofiles", "pytest", "hypothesis"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true